version: "3.7"

services:
  timescaledb:
    image: timescale/timescaledb:2.2.0-pg13
    restart: always
    ports:
      - 5432:5432
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USERNAME}

  hasura:
    image: hasura/graphql-engine:v1.3.3.cli-migrations-v2
    ports:
      - 8080:8080
    depends_on:
      - timescaledb
    volumes:
      - "./hasura/metadata:/hasura-metadata"
      - "./hasura/migrations:/hasura-migrations"
    restart: always
    environment:
      HASURA_GRAPHQL_CORS_DOMAIN: "*"
      HASURA_GRAPHQL_DATABASE_URL: postgres://${PG_USERNAME}:${PG_PASSWORD}@timescaledb/${PG_DATABASE}
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log

  serum-vial:
    image: tardisdev/serum-vial:latest
    restart: always
    depends_on:
      - hasura
    ports:
      - 8000:8000
    volumes:
      - ./markets.json:/markets.json
    environment:
      # https://github.com/tardis-dev/serum-vial#env-variables
      SV_ENDPOINT: ${RPC_URL}
      SV_LOG_LEVEL: debug
      SV_MARKETS_JSON: markets.json

  listener:
    restart: always
    build:
      context: ./
      dockerfile: ./listener/Dockerfile
    depends_on:
      - serum-vial
    volumes:
      - ./markets.json:/app/markets.json
    environment:
      GRAPHQL_URL: ${GRAPHQL_URL}
      SERUM_VIAL_URL: ws://serum-vial:8000/v1/ws
      # https://github.com/tardis-dev/serum-vial#supported-channels--corresponding-message-types
      CHANNELS: trades, level1, level2, level3
      RPC_URL: ${RPC_URL}
      PROGRAM_ID: ${PROGRAM_ID}
      DEX_PROGRAM_ID: ${DEX_PROGRAM_ID}

  dashboard:
    restart: always
    ports:
      - 80:80
    build:
      context: ./
      dockerfile: ./dashboard/Dockerfile
      args:
        GRAPHQL_URL: ${GRAPHQL_URL}
        EXT_HOST: ${EXT_HOST}

volumes:
  data:
